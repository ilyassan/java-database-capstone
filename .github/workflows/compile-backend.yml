# Name of the GitHub Actions workflow
name: Java CI - Compile and Test Backend

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for the "main" branch
  push:
    branches: [ "main" ]
  # Triggers the workflow on pull request events targeting the "main" branch
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # A sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Check out the repository code so the workflow can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the Java environment (JDK 17) required by the project
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies to speed up subsequent builds
      # This step stores the downloaded libraries and reuses them if pom.xml hasn't changed.
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Compile the code, run tests, and package the application using the Maven Wrapper
      # The '-B' flag runs Maven in non-interactive (batch) mode.
      - name: Compile and Test with Maven
        run: ./mvnw -B package
